---
apiVersion: backstage.io/v1alpha1
kind: API
metadata:
  name: sasiperi-customer-api
  description: Sample Spring Boot API for sample Customer
  annotations:
    jenkins.io/job-full-name: sasiperi-springboot-15factor-app-labs
    backstage.io/techdocs-ref: url:https://github.com/sasiperi/sasiperi-springboot-15factor-app-labs
    backstage.io/kubernetes-id: springboot-app-final
    #backstage.io/kubernetes-namespace: sasiperi
    dynatrace.com/dynatrace-entity-id: CUSTOM_DEVICE-8A26BB2F3AD06DA7
spec:
  type: openapi
  lifecycle: production
  owner: admin:sasiperis
  system: 15factor-sample-api
  definition: |
    openapi: 3.0.1
    info:
      title: Demo Customer API
      description: Demo stuff
      version: v1
    servers:
      - url: http://localhost:8080/v1
        description: Generated server url
    security:
      - security_client_creds: []
    paths:
      /customer:
        get:
          tags:
            - customer-controller
          operationId: getAllCustomer
          responses:
            '200':
              description: OK
              content:
                '*/*':
                  schema:
                    type: array
                    items:
                      $ref: '#/components/schemas/Customer'
            '404':
              description: Not Found
        post:
          tags:
            - customer-controller
          operationId: createCustomer
          requestBody:
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Customer'
            required: true
          responses:
            '200':
              description: OK
              content:
                '*/*':
                  schema:
                    $ref: '#/components/schemas/Customer'
            '404':
              description: Not Found
      /customer/{id}:
        get:
          tags:
            - customer-controller
          operationId: getCustomer
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int64
          responses:
            '200':
              description: OK
              content:
                '*/*':
                  schema:
                    $ref: '#/components/schemas/Customer'
            '404':
              description: Not Found
        patch:
          tags:
            - customer-controller
          operationId: updateCustomer
          parameters:
            - name: id
              in: path
              required: true
              schema:
                type: integer
                format: int64
          responses:
            '200':
              description: OK
              content:
                '*/*':
                  schema:
                    $ref: '#/components/schemas/Customer'
            '404':
              description: Not Found
      /customer/ssn/{ssn}:
        get:
          tags:
            - customer-controller
          operationId: getCustomer_1
          parameters:
            - name: ssn
              in: path
              required: true
              schema:
                type: integer
                format: int32
          responses:
            '200':
              description: OK
              content:
                '*/*':
                  schema:
                    $ref: '#/components/schemas/Customer'
            '404':
              description: Not Found
    components:
      schemas:
        Customer:
          required:
            - ssn
          type: object
          properties:
            customerId:
              type: integer
              format: int64
            firstName:
              maxLength: 10
              minLength: 4
              type: string
            lastName:
              type: string
            ssn:
              type: integer
              format: int32
            age:
              maximum: 150
              minimum: 18
              type: integer
              format: int32
      securitySchemes:
        security_client_creds:
          type: oauth2
          flows:
            clientCredentials:
              tokenUrl: https://dev-696450.okta.com/oauth2/default/v1/token
              scopes:
                urn:sp-api:read: read scope
                urn:sp-api:write: write scope
